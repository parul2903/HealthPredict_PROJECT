# Generated by Django 4.2 on 2024-10-07 06:19

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='chatbotInteraction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('conversationID', models.CharField(max_length=122)),
                ('userID', models.CharField(max_length=122)),
                ('message', models.CharField(max_length=122)),
                ('response', models.CharField(max_length=122)),
                ('interactionTimestamp', models.CharField(max_length=122)),
            ],
        ),
        migrations.CreateModel(
            name='diseasePrediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('predictionID', models.CharField(max_length=122)),
                ('userID', models.CharField(max_length=122)),
                ('diseaseName', models.CharField(max_length=122)),
                ('predictionAccuracy', models.CharField(max_length=122)),
            ],
        ),
        migrations.CreateModel(
            name='notificationsAlerts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notificationID', models.CharField(max_length=122)),
                ('userID', models.CharField(max_length=122)),
                ('notificationType', models.CharField(max_length=122)),
                ('notificationMessage', models.CharField(max_length=122)),
                ('sentAt', models.CharField(max_length=122)),
            ],
        ),
        migrations.CreateModel(
            name='recommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recommendationID', models.CharField(max_length=122)),
                ('userID', models.CharField(max_length=122)),
                ('recommendationText', models.CharField(max_length=122)),
                ('recommendationType', models.CharField(max_length=122)),
            ],
        ),
        migrations.CreateModel(
            name='symptoms',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symptomID', models.CharField(max_length=122)),
                ('symptomDescription', models.CharField(max_length=122)),
            ],
        ),
        migrations.CreateModel(
            name='Usersymptoms',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userID', models.CharField(max_length=122)),
                ('symptomID', models.CharField(max_length=122)),
                ('symptomEnteredAt', models.CharField(max_length=122)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, max_length=500)),
                ('age', models.PositiveIntegerField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, max_length=10, null=True)),
                ('height', models.FloatField(blank=True, null=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='profile_photos/')),
                ('has_used_symptom_checker', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
